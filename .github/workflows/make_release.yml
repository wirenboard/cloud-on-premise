name: Release On-Premise

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - VERSION
      - docker-compose.yml
      - make_release.yml

env:
  REGISTRY: ghcr.io
  VERSION_FILE: ./VERSION

jobs:
  read-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.read.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read version from VERSION file
        id: read_version
        run: echo "VERSION=$(cat VERSION)" >> "$GITHUB_OUTPUT"

  retag-and-push:
    needs: read-version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [
          wbc-backend,
          wbc-worker,
          wbc-agent-backend,
          wbc-scheduler,
          wbc-frontend,
          wbc-tunnel,
          wbc-tunnel-auth,
          wbc-webssh
        ]
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retag and push image ${{ matrix.image }}
        run: |
          VERSION=${{ needs.read-version.outputs.version }}
          IMAGE=${{ matrix.image }}

          SOURCE_IMAGE="${REGISTRY}/${{ github.repository_owner }}/on-premise/${IMAGE}:${VERSION}-testing"
          TARGET_IMAGE="${REGISTRY}/${{ github.repository_owner }}/on-premise/${IMAGE}:${VERSION}"

          echo "Retagging $SOURCE_IMAGE → $TARGET_IMAGE"

          docker pull "$SOURCE_IMAGE"
          docker tag "$SOURCE_IMAGE" "$TARGET_IMAGE"
          docker push "$TARGET_IMAGE"

  create-release:
    needs: [read-version, retag-and-push]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.read-version.outputs.version }}
          name: Release v${{ needs.read-version.outputs.version }}
          files: |
            VERSION
            CHANGELOG.md
            LICENSE
            README.md
            README_EN.md
            Makefile
            .env.example
            docker-compose.yml
            traefik/**
            tls/**
            jwt/**

      - name: Done
        run: echo "✅ Release completed for version ${{ needs.read-version.outputs.version }}"